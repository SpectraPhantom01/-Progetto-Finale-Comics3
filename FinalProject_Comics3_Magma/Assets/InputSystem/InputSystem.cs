//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/InputSystem/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystem: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystem()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""b55fa7c5-ebf6-4b0d-a894-4f3b2444c711"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""5722bcbf-a42e-4cb3-8764-37cfd473b7a9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementWASD"",
                    ""type"": ""Value"",
                    ""id"": ""9a177cc9-bf50-4781-8a22-63f3512276c7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""76288315-406e-4b99-99e9-b3db5fd7026d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackMouse"",
                    ""type"": ""Button"",
                    ""id"": ""0aadc512-0510-4c15-a10e-6610c8f76d25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""a4e57bcc-da34-4a5b-9733-1600d2386b9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rewind"",
                    ""type"": ""Button"",
                    ""id"": ""a7568a94-888e-4fb3-b1bd-2fd184fad138"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""53ac953d-6787-4ef6-a0a0-0c2c259c05dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectOne"",
                    ""type"": ""Button"",
                    ""id"": ""242509c3-96ab-4e2e-a1d1-6e8cc1f85010"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectTwo"",
                    ""type"": ""Button"",
                    ""id"": ""616b2cc6-c010-4621-b499-e712a1adc4a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectThree"",
                    ""type"": ""Button"",
                    ""id"": ""cf383ffd-bcab-46d3-9b59-8fd484a66b35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectFour"",
                    ""type"": ""Button"",
                    ""id"": ""5acc57da-18a5-403c-8430-3d99c5525178"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""92ab5cbe-4a14-4d7c-887b-712066d0e94d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7f591edd-1f2d-4b9d-b717-622dfec92e8e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7d15e64d-a547-436e-945a-9167e1c63449"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""42b624e4-b604-4bb9-8b22-ab83a254f6a6"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e365496e-1304-4af3-b5a5-f2f5fa5288e5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bb652d7e-2464-4bf5-b52e-d88cf3e8c461"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7022fc44-646f-48ed-9fe6-d91259b74ff1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b744433e-a885-4a02-b591-d89fbed928a0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Rewind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40859486-ab60-4492-82ec-ad8bed849d9f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37d75f8d-f2f1-4ecc-8e39-67e44e5b51a8"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActiveObjectOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a135981-acd2-470b-a580-8e7dfd3cce49"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActiveObjectTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6d552d0-361b-4ebd-bc8b-564cdeb72a36"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActiveObjectThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2009579d-3e1b-4f60-9874-1389723b04f3"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActiveObjectFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ca906015-6d48-4e21-a6f3-a32d7116dbe2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementWASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2a512890-4f42-49f5-b0a6-a8a770b0a5f1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""731bfbe7-ad2b-4a9b-9a03-7555d9e3b20b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f9dfba7e-5ba8-46f0-8aef-873450f314f6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""29e5f8a2-8841-4245-8559-78f41f490cfa"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovementWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4dcc2773-46f1-437f-9b49-5b169aeb7075"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""AttackMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerGamePad"",
            ""id"": ""a78fbdb4-8e5f-41d4-b5d7-96c3fdc48be2"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c7fa2c41-5817-48ae-95a1-a3953a3b2d07"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIMouseMovement"",
                    ""type"": ""Value"",
                    ""id"": ""f9bcda47-7aa9-431a-859a-c4004ae45204"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""134bd752-6bf3-43b3-af62-db7b3d1f1494"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIMouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""02ec87ea-91d1-45ef-854f-1d4704ee0028"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""768ed4d5-d853-47f2-b8f6-4adec5ff5488"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rewind"",
                    ""type"": ""Button"",
                    ""id"": ""8bc22720-51a7-4288-93b0-531010350428"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""feb506a6-4fe9-44c1-809d-d12ff15ceb33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectOne"",
                    ""type"": ""Button"",
                    ""id"": ""748f727a-1ecc-45aa-a0a3-8810fc6b4711"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectTwo"",
                    ""type"": ""Button"",
                    ""id"": ""122d1e1e-f12a-4557-a72d-176937367f25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectThree"",
                    ""type"": ""Button"",
                    ""id"": ""7f9f2c45-6cf2-445a-ae97-1430b0176046"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectFour"",
                    ""type"": ""Button"",
                    ""id"": ""e2eef219-d70b-49ec-a980-6761cbe16c33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9dd141a5-8702-4479-951d-48ae3efff9d1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""13ec4002-d5ae-4312-b983-0cc6c236f891"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0fadb253-4cb9-46d5-af76-09c16bba61e3"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9164deeb-7f6a-41b4-8b19-db8152f6064a"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b0a0e952-bd00-48ca-94ff-b043a07c4ea7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8eb6068b-3ffd-449c-b2fc-af4eb1b42be2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c63b22f-d8e7-4437-93d9-6a974f9fdbb9"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""952a03ae-75b6-49f3-9739-13b0501c1d6e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rewind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f44c05c-8614-4b43-964a-bedfc5e0de61"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43db6ce8-ae45-4343-8fad-8f69c7fedc82"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b563fe66-0aa9-4a8d-8985-e58888d7f4f2"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""404ed781-12d4-443f-87c9-db82ef132e31"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e94d617e-bb57-47fc-ac83-d0fed2ef62a9"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3b0af39f-18bd-4508-be75-ba75f1ed6119"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""563294e3-d851-44eb-baa0-09f485936519"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d161f2e0-1c38-44c7-9b9a-419169177dec"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c3d3ecf9-6935-45cf-b82d-b5668770d457"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ebe047c4-695b-4544-ab2a-0c1975ce0c2f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""da63c324-fd97-4209-ad85-3175c8a3ed24"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerUSBJoyStick"",
            ""id"": ""34655114-d6d7-4db1-9651-73878c2f375c"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""680f9a56-a97f-4070-a058-baf086990007"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UIMouseMovement"",
                    ""type"": ""Value"",
                    ""id"": ""cee78918-4f4f-4233-8b5c-642745a3ea14"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""6bee93ba-8687-4db7-9e94-296eb4c67662"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UIMouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""41f97d17-22c6-46bc-a8a5-47bc56d3992f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""9e72fb52-1a8d-4f0e-adbd-0a8c9f4cfc56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rewind"",
                    ""type"": ""Button"",
                    ""id"": ""68430203-8ffd-455e-8be5-bb40bb72a1ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""f4d7325a-b1f0-48d4-90a5-f710c5596efb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectOne"",
                    ""type"": ""Button"",
                    ""id"": ""f8d50ef1-9dc0-45a0-9ca5-44ad9d8014b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectTwo"",
                    ""type"": ""Button"",
                    ""id"": ""16b071d8-80ce-41da-8925-c91380edc139"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectThree"",
                    ""type"": ""Button"",
                    ""id"": ""22abe8d7-878d-4d61-b6fa-7c1d0d140380"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActiveObjectFour"",
                    ""type"": ""Button"",
                    ""id"": ""86879653-9b7d-4d1c-a607-6526881f0efe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0c4eb124-c715-4ee2-97d0-ac2ee4667c3e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f476acc8-fd9c-4fe7-9e25-fbedef8621c8"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""57f2c354-2f47-4d4e-8068-b59bee400824"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f7b7fe4b-5d75-4d63-a800-7a4334ac787b"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a56fad97-f766-4493-aec3-a6f3ee414095"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""62951ae0-98db-4514-95bc-3d6cf1b2d5b6"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e48a95b1-b3ad-4388-8fdf-bb35fe90dc0a"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc3cda31-2d68-4497-ae3f-57f4772a3ff1"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Rewind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8d5f5a9-2051-4950-983c-6d59321e0cd9"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button10"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a10303a-3d50-43b5-a595-651f9ef5b370"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa68480f-4bb7-4fff-877d-a108634c6938"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""380b40e2-f76c-4158-86bb-05d2ba834b38"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aef243ed-b6dd-4773-a410-96f454a08e8a"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActiveObjectFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a4e543ae-7093-4da5-ace1-98d755d400c3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""36874c2d-d4ee-4b7c-88e7-9ed482f82396"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2d7a394c-43a1-455d-adb7-a69ab2bab349"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""60e2744c-e58b-4c18-85bb-0fdcaa2d73da"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6497777b-09a6-41b2-b319-9cc7f5eca31a"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b1d8c168-3986-484d-9032-37c31b15fb44"",
                    ""path"": ""<HID::SHANWAN USB Joystick>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""UIMouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_MovementWASD = m_Player.FindAction("MovementWASD", throwIfNotFound: true);
        m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
        m_Player_AttackMouse = m_Player.FindAction("AttackMouse", throwIfNotFound: true);
        m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
        m_Player_Rewind = m_Player.FindAction("Rewind", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_ActiveObjectOne = m_Player.FindAction("ActiveObjectOne", throwIfNotFound: true);
        m_Player_ActiveObjectTwo = m_Player.FindAction("ActiveObjectTwo", throwIfNotFound: true);
        m_Player_ActiveObjectThree = m_Player.FindAction("ActiveObjectThree", throwIfNotFound: true);
        m_Player_ActiveObjectFour = m_Player.FindAction("ActiveObjectFour", throwIfNotFound: true);
        // PlayerGamePad
        m_PlayerGamePad = asset.FindActionMap("PlayerGamePad", throwIfNotFound: true);
        m_PlayerGamePad_Movement = m_PlayerGamePad.FindAction("Movement", throwIfNotFound: true);
        m_PlayerGamePad_UIMouseMovement = m_PlayerGamePad.FindAction("UIMouseMovement", throwIfNotFound: true);
        m_PlayerGamePad_Attack = m_PlayerGamePad.FindAction("Attack", throwIfNotFound: true);
        m_PlayerGamePad_UIMouseClick = m_PlayerGamePad.FindAction("UIMouseClick", throwIfNotFound: true);
        m_PlayerGamePad_Dash = m_PlayerGamePad.FindAction("Dash", throwIfNotFound: true);
        m_PlayerGamePad_Rewind = m_PlayerGamePad.FindAction("Rewind", throwIfNotFound: true);
        m_PlayerGamePad_Pause = m_PlayerGamePad.FindAction("Pause", throwIfNotFound: true);
        m_PlayerGamePad_ActiveObjectOne = m_PlayerGamePad.FindAction("ActiveObjectOne", throwIfNotFound: true);
        m_PlayerGamePad_ActiveObjectTwo = m_PlayerGamePad.FindAction("ActiveObjectTwo", throwIfNotFound: true);
        m_PlayerGamePad_ActiveObjectThree = m_PlayerGamePad.FindAction("ActiveObjectThree", throwIfNotFound: true);
        m_PlayerGamePad_ActiveObjectFour = m_PlayerGamePad.FindAction("ActiveObjectFour", throwIfNotFound: true);
        // PlayerUSBJoyStick
        m_PlayerUSBJoyStick = asset.FindActionMap("PlayerUSBJoyStick", throwIfNotFound: true);
        m_PlayerUSBJoyStick_Movement = m_PlayerUSBJoyStick.FindAction("Movement", throwIfNotFound: true);
        m_PlayerUSBJoyStick_UIMouseMovement = m_PlayerUSBJoyStick.FindAction("UIMouseMovement", throwIfNotFound: true);
        m_PlayerUSBJoyStick_Attack = m_PlayerUSBJoyStick.FindAction("Attack", throwIfNotFound: true);
        m_PlayerUSBJoyStick_UIMouseClick = m_PlayerUSBJoyStick.FindAction("UIMouseClick", throwIfNotFound: true);
        m_PlayerUSBJoyStick_Dash = m_PlayerUSBJoyStick.FindAction("Dash", throwIfNotFound: true);
        m_PlayerUSBJoyStick_Rewind = m_PlayerUSBJoyStick.FindAction("Rewind", throwIfNotFound: true);
        m_PlayerUSBJoyStick_Pause = m_PlayerUSBJoyStick.FindAction("Pause", throwIfNotFound: true);
        m_PlayerUSBJoyStick_ActiveObjectOne = m_PlayerUSBJoyStick.FindAction("ActiveObjectOne", throwIfNotFound: true);
        m_PlayerUSBJoyStick_ActiveObjectTwo = m_PlayerUSBJoyStick.FindAction("ActiveObjectTwo", throwIfNotFound: true);
        m_PlayerUSBJoyStick_ActiveObjectThree = m_PlayerUSBJoyStick.FindAction("ActiveObjectThree", throwIfNotFound: true);
        m_PlayerUSBJoyStick_ActiveObjectFour = m_PlayerUSBJoyStick.FindAction("ActiveObjectFour", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_MovementWASD;
    private readonly InputAction m_Player_Attack;
    private readonly InputAction m_Player_AttackMouse;
    private readonly InputAction m_Player_Dash;
    private readonly InputAction m_Player_Rewind;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_ActiveObjectOne;
    private readonly InputAction m_Player_ActiveObjectTwo;
    private readonly InputAction m_Player_ActiveObjectThree;
    private readonly InputAction m_Player_ActiveObjectFour;
    public struct PlayerActions
    {
        private @InputSystem m_Wrapper;
        public PlayerActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @MovementWASD => m_Wrapper.m_Player_MovementWASD;
        public InputAction @Attack => m_Wrapper.m_Player_Attack;
        public InputAction @AttackMouse => m_Wrapper.m_Player_AttackMouse;
        public InputAction @Dash => m_Wrapper.m_Player_Dash;
        public InputAction @Rewind => m_Wrapper.m_Player_Rewind;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @ActiveObjectOne => m_Wrapper.m_Player_ActiveObjectOne;
        public InputAction @ActiveObjectTwo => m_Wrapper.m_Player_ActiveObjectTwo;
        public InputAction @ActiveObjectThree => m_Wrapper.m_Player_ActiveObjectThree;
        public InputAction @ActiveObjectFour => m_Wrapper.m_Player_ActiveObjectFour;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @MovementWASD.started += instance.OnMovementWASD;
            @MovementWASD.performed += instance.OnMovementWASD;
            @MovementWASD.canceled += instance.OnMovementWASD;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @AttackMouse.started += instance.OnAttackMouse;
            @AttackMouse.performed += instance.OnAttackMouse;
            @AttackMouse.canceled += instance.OnAttackMouse;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Rewind.started += instance.OnRewind;
            @Rewind.performed += instance.OnRewind;
            @Rewind.canceled += instance.OnRewind;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @ActiveObjectOne.started += instance.OnActiveObjectOne;
            @ActiveObjectOne.performed += instance.OnActiveObjectOne;
            @ActiveObjectOne.canceled += instance.OnActiveObjectOne;
            @ActiveObjectTwo.started += instance.OnActiveObjectTwo;
            @ActiveObjectTwo.performed += instance.OnActiveObjectTwo;
            @ActiveObjectTwo.canceled += instance.OnActiveObjectTwo;
            @ActiveObjectThree.started += instance.OnActiveObjectThree;
            @ActiveObjectThree.performed += instance.OnActiveObjectThree;
            @ActiveObjectThree.canceled += instance.OnActiveObjectThree;
            @ActiveObjectFour.started += instance.OnActiveObjectFour;
            @ActiveObjectFour.performed += instance.OnActiveObjectFour;
            @ActiveObjectFour.canceled += instance.OnActiveObjectFour;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @MovementWASD.started -= instance.OnMovementWASD;
            @MovementWASD.performed -= instance.OnMovementWASD;
            @MovementWASD.canceled -= instance.OnMovementWASD;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @AttackMouse.started -= instance.OnAttackMouse;
            @AttackMouse.performed -= instance.OnAttackMouse;
            @AttackMouse.canceled -= instance.OnAttackMouse;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Rewind.started -= instance.OnRewind;
            @Rewind.performed -= instance.OnRewind;
            @Rewind.canceled -= instance.OnRewind;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @ActiveObjectOne.started -= instance.OnActiveObjectOne;
            @ActiveObjectOne.performed -= instance.OnActiveObjectOne;
            @ActiveObjectOne.canceled -= instance.OnActiveObjectOne;
            @ActiveObjectTwo.started -= instance.OnActiveObjectTwo;
            @ActiveObjectTwo.performed -= instance.OnActiveObjectTwo;
            @ActiveObjectTwo.canceled -= instance.OnActiveObjectTwo;
            @ActiveObjectThree.started -= instance.OnActiveObjectThree;
            @ActiveObjectThree.performed -= instance.OnActiveObjectThree;
            @ActiveObjectThree.canceled -= instance.OnActiveObjectThree;
            @ActiveObjectFour.started -= instance.OnActiveObjectFour;
            @ActiveObjectFour.performed -= instance.OnActiveObjectFour;
            @ActiveObjectFour.canceled -= instance.OnActiveObjectFour;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // PlayerGamePad
    private readonly InputActionMap m_PlayerGamePad;
    private List<IPlayerGamePadActions> m_PlayerGamePadActionsCallbackInterfaces = new List<IPlayerGamePadActions>();
    private readonly InputAction m_PlayerGamePad_Movement;
    private readonly InputAction m_PlayerGamePad_UIMouseMovement;
    private readonly InputAction m_PlayerGamePad_Attack;
    private readonly InputAction m_PlayerGamePad_UIMouseClick;
    private readonly InputAction m_PlayerGamePad_Dash;
    private readonly InputAction m_PlayerGamePad_Rewind;
    private readonly InputAction m_PlayerGamePad_Pause;
    private readonly InputAction m_PlayerGamePad_ActiveObjectOne;
    private readonly InputAction m_PlayerGamePad_ActiveObjectTwo;
    private readonly InputAction m_PlayerGamePad_ActiveObjectThree;
    private readonly InputAction m_PlayerGamePad_ActiveObjectFour;
    public struct PlayerGamePadActions
    {
        private @InputSystem m_Wrapper;
        public PlayerGamePadActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerGamePad_Movement;
        public InputAction @UIMouseMovement => m_Wrapper.m_PlayerGamePad_UIMouseMovement;
        public InputAction @Attack => m_Wrapper.m_PlayerGamePad_Attack;
        public InputAction @UIMouseClick => m_Wrapper.m_PlayerGamePad_UIMouseClick;
        public InputAction @Dash => m_Wrapper.m_PlayerGamePad_Dash;
        public InputAction @Rewind => m_Wrapper.m_PlayerGamePad_Rewind;
        public InputAction @Pause => m_Wrapper.m_PlayerGamePad_Pause;
        public InputAction @ActiveObjectOne => m_Wrapper.m_PlayerGamePad_ActiveObjectOne;
        public InputAction @ActiveObjectTwo => m_Wrapper.m_PlayerGamePad_ActiveObjectTwo;
        public InputAction @ActiveObjectThree => m_Wrapper.m_PlayerGamePad_ActiveObjectThree;
        public InputAction @ActiveObjectFour => m_Wrapper.m_PlayerGamePad_ActiveObjectFour;
        public InputActionMap Get() { return m_Wrapper.m_PlayerGamePad; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerGamePadActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerGamePadActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerGamePadActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerGamePadActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @UIMouseMovement.started += instance.OnUIMouseMovement;
            @UIMouseMovement.performed += instance.OnUIMouseMovement;
            @UIMouseMovement.canceled += instance.OnUIMouseMovement;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @UIMouseClick.started += instance.OnUIMouseClick;
            @UIMouseClick.performed += instance.OnUIMouseClick;
            @UIMouseClick.canceled += instance.OnUIMouseClick;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Rewind.started += instance.OnRewind;
            @Rewind.performed += instance.OnRewind;
            @Rewind.canceled += instance.OnRewind;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @ActiveObjectOne.started += instance.OnActiveObjectOne;
            @ActiveObjectOne.performed += instance.OnActiveObjectOne;
            @ActiveObjectOne.canceled += instance.OnActiveObjectOne;
            @ActiveObjectTwo.started += instance.OnActiveObjectTwo;
            @ActiveObjectTwo.performed += instance.OnActiveObjectTwo;
            @ActiveObjectTwo.canceled += instance.OnActiveObjectTwo;
            @ActiveObjectThree.started += instance.OnActiveObjectThree;
            @ActiveObjectThree.performed += instance.OnActiveObjectThree;
            @ActiveObjectThree.canceled += instance.OnActiveObjectThree;
            @ActiveObjectFour.started += instance.OnActiveObjectFour;
            @ActiveObjectFour.performed += instance.OnActiveObjectFour;
            @ActiveObjectFour.canceled += instance.OnActiveObjectFour;
        }

        private void UnregisterCallbacks(IPlayerGamePadActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @UIMouseMovement.started -= instance.OnUIMouseMovement;
            @UIMouseMovement.performed -= instance.OnUIMouseMovement;
            @UIMouseMovement.canceled -= instance.OnUIMouseMovement;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @UIMouseClick.started -= instance.OnUIMouseClick;
            @UIMouseClick.performed -= instance.OnUIMouseClick;
            @UIMouseClick.canceled -= instance.OnUIMouseClick;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Rewind.started -= instance.OnRewind;
            @Rewind.performed -= instance.OnRewind;
            @Rewind.canceled -= instance.OnRewind;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @ActiveObjectOne.started -= instance.OnActiveObjectOne;
            @ActiveObjectOne.performed -= instance.OnActiveObjectOne;
            @ActiveObjectOne.canceled -= instance.OnActiveObjectOne;
            @ActiveObjectTwo.started -= instance.OnActiveObjectTwo;
            @ActiveObjectTwo.performed -= instance.OnActiveObjectTwo;
            @ActiveObjectTwo.canceled -= instance.OnActiveObjectTwo;
            @ActiveObjectThree.started -= instance.OnActiveObjectThree;
            @ActiveObjectThree.performed -= instance.OnActiveObjectThree;
            @ActiveObjectThree.canceled -= instance.OnActiveObjectThree;
            @ActiveObjectFour.started -= instance.OnActiveObjectFour;
            @ActiveObjectFour.performed -= instance.OnActiveObjectFour;
            @ActiveObjectFour.canceled -= instance.OnActiveObjectFour;
        }

        public void RemoveCallbacks(IPlayerGamePadActions instance)
        {
            if (m_Wrapper.m_PlayerGamePadActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerGamePadActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerGamePadActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerGamePadActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerGamePadActions @PlayerGamePad => new PlayerGamePadActions(this);

    // PlayerUSBJoyStick
    private readonly InputActionMap m_PlayerUSBJoyStick;
    private List<IPlayerUSBJoyStickActions> m_PlayerUSBJoyStickActionsCallbackInterfaces = new List<IPlayerUSBJoyStickActions>();
    private readonly InputAction m_PlayerUSBJoyStick_Movement;
    private readonly InputAction m_PlayerUSBJoyStick_UIMouseMovement;
    private readonly InputAction m_PlayerUSBJoyStick_Attack;
    private readonly InputAction m_PlayerUSBJoyStick_UIMouseClick;
    private readonly InputAction m_PlayerUSBJoyStick_Dash;
    private readonly InputAction m_PlayerUSBJoyStick_Rewind;
    private readonly InputAction m_PlayerUSBJoyStick_Pause;
    private readonly InputAction m_PlayerUSBJoyStick_ActiveObjectOne;
    private readonly InputAction m_PlayerUSBJoyStick_ActiveObjectTwo;
    private readonly InputAction m_PlayerUSBJoyStick_ActiveObjectThree;
    private readonly InputAction m_PlayerUSBJoyStick_ActiveObjectFour;
    public struct PlayerUSBJoyStickActions
    {
        private @InputSystem m_Wrapper;
        public PlayerUSBJoyStickActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerUSBJoyStick_Movement;
        public InputAction @UIMouseMovement => m_Wrapper.m_PlayerUSBJoyStick_UIMouseMovement;
        public InputAction @Attack => m_Wrapper.m_PlayerUSBJoyStick_Attack;
        public InputAction @UIMouseClick => m_Wrapper.m_PlayerUSBJoyStick_UIMouseClick;
        public InputAction @Dash => m_Wrapper.m_PlayerUSBJoyStick_Dash;
        public InputAction @Rewind => m_Wrapper.m_PlayerUSBJoyStick_Rewind;
        public InputAction @Pause => m_Wrapper.m_PlayerUSBJoyStick_Pause;
        public InputAction @ActiveObjectOne => m_Wrapper.m_PlayerUSBJoyStick_ActiveObjectOne;
        public InputAction @ActiveObjectTwo => m_Wrapper.m_PlayerUSBJoyStick_ActiveObjectTwo;
        public InputAction @ActiveObjectThree => m_Wrapper.m_PlayerUSBJoyStick_ActiveObjectThree;
        public InputAction @ActiveObjectFour => m_Wrapper.m_PlayerUSBJoyStick_ActiveObjectFour;
        public InputActionMap Get() { return m_Wrapper.m_PlayerUSBJoyStick; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerUSBJoyStickActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerUSBJoyStickActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerUSBJoyStickActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerUSBJoyStickActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @UIMouseMovement.started += instance.OnUIMouseMovement;
            @UIMouseMovement.performed += instance.OnUIMouseMovement;
            @UIMouseMovement.canceled += instance.OnUIMouseMovement;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @UIMouseClick.started += instance.OnUIMouseClick;
            @UIMouseClick.performed += instance.OnUIMouseClick;
            @UIMouseClick.canceled += instance.OnUIMouseClick;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Rewind.started += instance.OnRewind;
            @Rewind.performed += instance.OnRewind;
            @Rewind.canceled += instance.OnRewind;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @ActiveObjectOne.started += instance.OnActiveObjectOne;
            @ActiveObjectOne.performed += instance.OnActiveObjectOne;
            @ActiveObjectOne.canceled += instance.OnActiveObjectOne;
            @ActiveObjectTwo.started += instance.OnActiveObjectTwo;
            @ActiveObjectTwo.performed += instance.OnActiveObjectTwo;
            @ActiveObjectTwo.canceled += instance.OnActiveObjectTwo;
            @ActiveObjectThree.started += instance.OnActiveObjectThree;
            @ActiveObjectThree.performed += instance.OnActiveObjectThree;
            @ActiveObjectThree.canceled += instance.OnActiveObjectThree;
            @ActiveObjectFour.started += instance.OnActiveObjectFour;
            @ActiveObjectFour.performed += instance.OnActiveObjectFour;
            @ActiveObjectFour.canceled += instance.OnActiveObjectFour;
        }

        private void UnregisterCallbacks(IPlayerUSBJoyStickActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @UIMouseMovement.started -= instance.OnUIMouseMovement;
            @UIMouseMovement.performed -= instance.OnUIMouseMovement;
            @UIMouseMovement.canceled -= instance.OnUIMouseMovement;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @UIMouseClick.started -= instance.OnUIMouseClick;
            @UIMouseClick.performed -= instance.OnUIMouseClick;
            @UIMouseClick.canceled -= instance.OnUIMouseClick;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Rewind.started -= instance.OnRewind;
            @Rewind.performed -= instance.OnRewind;
            @Rewind.canceled -= instance.OnRewind;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @ActiveObjectOne.started -= instance.OnActiveObjectOne;
            @ActiveObjectOne.performed -= instance.OnActiveObjectOne;
            @ActiveObjectOne.canceled -= instance.OnActiveObjectOne;
            @ActiveObjectTwo.started -= instance.OnActiveObjectTwo;
            @ActiveObjectTwo.performed -= instance.OnActiveObjectTwo;
            @ActiveObjectTwo.canceled -= instance.OnActiveObjectTwo;
            @ActiveObjectThree.started -= instance.OnActiveObjectThree;
            @ActiveObjectThree.performed -= instance.OnActiveObjectThree;
            @ActiveObjectThree.canceled -= instance.OnActiveObjectThree;
            @ActiveObjectFour.started -= instance.OnActiveObjectFour;
            @ActiveObjectFour.performed -= instance.OnActiveObjectFour;
            @ActiveObjectFour.canceled -= instance.OnActiveObjectFour;
        }

        public void RemoveCallbacks(IPlayerUSBJoyStickActions instance)
        {
            if (m_Wrapper.m_PlayerUSBJoyStickActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerUSBJoyStickActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerUSBJoyStickActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerUSBJoyStickActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerUSBJoyStickActions @PlayerUSBJoyStick => new PlayerUSBJoyStickActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMovementWASD(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnAttackMouse(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnRewind(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnActiveObjectOne(InputAction.CallbackContext context);
        void OnActiveObjectTwo(InputAction.CallbackContext context);
        void OnActiveObjectThree(InputAction.CallbackContext context);
        void OnActiveObjectFour(InputAction.CallbackContext context);
    }
    public interface IPlayerGamePadActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnUIMouseMovement(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnUIMouseClick(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnRewind(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnActiveObjectOne(InputAction.CallbackContext context);
        void OnActiveObjectTwo(InputAction.CallbackContext context);
        void OnActiveObjectThree(InputAction.CallbackContext context);
        void OnActiveObjectFour(InputAction.CallbackContext context);
    }
    public interface IPlayerUSBJoyStickActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnUIMouseMovement(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnUIMouseClick(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnRewind(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnActiveObjectOne(InputAction.CallbackContext context);
        void OnActiveObjectTwo(InputAction.CallbackContext context);
        void OnActiveObjectThree(InputAction.CallbackContext context);
        void OnActiveObjectFour(InputAction.CallbackContext context);
    }
}
